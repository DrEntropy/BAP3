# Preface {.unnumbered}

Bayesian statistics has been developing for more than 250 years. During this time, it has enjoyed as much recognition and appreciation as it has faced disdain and contempt. Throughout the last few decades, it has gained more and more attention from people in statistics and almost all the other sciences, engineering, and even outside the boundaries of the academic world. This revival has been possible due to theoretical and computational advancements developed mostly throughout the second half of the 20th century. Indeed, modern Bayesian statistics is mostly computational statistics. The necessity for flexible and transparent models and a more intuitive interpretation of statistical models and analysis has only contributed to the trend.

In this book, our focus will be on a practical approach to Bayesian statistics and we will not delve into discussions about the frequentist approach or its connection to Bayesian statistics. This decision is made to maintain a clear and concise focus on the subject matter. If you are interested in that perspective Doing Bayesian Data Analysis may be the book for you [@kruschke_2014]. This book aims to be a practical guide to Bayesian data analysis; philosophical discussions are interesting, but they have already been undertaken elsewhere in a richer way which is simply outside the scope of these pages [see for example @clayton_2021].
We will take a modeling approach to statistics, learn how to think in terms of probabilistic models and apply Bayes' theorem to derive the logical consequences of our models and
data. The approach will also be computational; models will be coded using PyMC and Bambi. These are libraries for Bayesian statistics that hide most of the mathematical details and computations from the user. We will then use ArviZ, a Python package for exploratory analysis of Bayesian models. We will also be assisted by other libraries in the Python ecosystem, including PreliZ for prior elicitation, Kulprit for variable selection, PyMC-BART for flexible regression. And of course, we will also use common tools from the standard Python Data stack, like NumPy, matplotlib, Pandas etc.

Bayesian methods are theoretically grounded in probability theory, and so it's no wonder that many books about Bayesian statistics are full of mathematical formulas requiring a certain level of mathematical sophistication. Learning the mathematical foundations of statistics will certainly help you build better models and gain intuition about problems, models, and results. Nevertheless, libraries such as PyMC allow us to learn and do Bayesian statistics with only a modest amount of mathematical knowledge, as you will be able to verify yourself throughout this book.

## Who this book is for

If you are a student, data scientist, a researcher in the natural or social sciences, or developer looking to get started with Bayesian data analysis and probabilistic programming, this book is for you. The book is introductory, so no previous statistical knowledge is required. Although the book assumes you have experience with Python or familiarity with libraries like NumPy, matplotlib is expected.


## What this book covers

**Chapter 1**, *Thinking Probabilistically*, covers the basic concepts of Bayesian statistics and its implications for data analysis. This chapter contains most of the foundational ideas used in the rest of the book.

**Chapter 2**, *Programming Probabilistically*, revisits the concepts from the previous chapter from a more computational perspective. The PyMC probabilistic programming library is introduced, as well as ArviZ, a Python library for exploratory analysis of Bayesian models. Hierarchical models are explained with a couple of examples.

**Chapter 3**, *Modeling with Linear Regression*, covers the basic elements of linear regression, a very widely used model and the building block of more complex models. And then it moves into generalizing linear models to solve many data analysis problems.

**Chapter 4**, *Advanced Linear Modeling*, introduces Bambi a Bayesian library that makes working with generalized linear models much easier than even PyMC. In this chapter, we will also discuss variable selection and new models like splines.

**Chapter 5**, *Model Comparison*, discusses how to compare, select, and average models using LOO, and Bayes factors. The general caveats of these methods are discussed.

**Chapter 6**, *Mixture Models*, discusses how to add flexibility to models by mixing simpler distributions to build more complex ones. The first non-parametric model in the book is also introduced: the Dirichlet process.

**Chapter 7**, *Gaussian Processes*, cover the basic idea behind Gaussian processes and how to use them to build non-parametric models over functions for a wide array of problems.

**Chapter 8**, *Bayesian Additive Regression Trees* introduces readers to a flexible regression model that combines decision trees and Bayesian modeling techniques. The chapter will cover the key features of BART, including its flexibility in capturing non-linear relationships between predictors and outcomes and how it can be used for variable selection.

**Chapter 9**, *Inference Engines*, provides an introduction to methods for numerically approximating the posterior distribution, as well as a very important topic from the practitioner's perspective: how to diagnose the reliability of the approximated posterior.

**Chapter 10**, *Where To Go Next?* provides a list of resources for you to keep learning from beyond this book, and a very short farewell speech.

## To get the most out of this book

The code in the book was written using Python version 3.10. To install Python and Python libraries, I recommend using Anaconda, a scientific computing distribution. You can read more about Anaconda and download it at <https://www.anaconda.com/products/distribution>​. This will install many useful Python packages on your system. You will need to install some packages. To install the necessary package please use:

```
conda install -c conda-forge pymc=x.x arviz=x.x bambi=x.x pymc-bart=x.x kulprit=x.x
```

or if you prefer to use pip:

```
pip install pymc==x.x arviz==x.x bambi==x.x pymc-bart==x.x kulprit==x.x
```

An alternative way to install the necessary packages, once Anaconda is installed in your system, is to go to <https://github.com/aloctavodia/BAP3> and download the environment file named bap3.yml. Using it, you can install all the necessary packages by doing the following:



```
conda env create -f bap.yml
```

The Python packages used to write this book are listed here:

* IPython x.x
* Jupyter x.x
* NumPy x.x
* SciPy x.x
* pandas x.x
* Matplotlib x.x
* Seaborn x.x
* ArviZ x.x
* PyMC x.x


The code presented in each chapter assumes that you have imported at least some of these packages. Instead of copying and pasting the code from the book, I recommend downloading the code from <https://github.com/aloctavodia/BAP3> and running it using Jupyter Notebook (or Jupyter Lab). I will keep this repository updated for new releases of PyMC or ArviZ. If you find a technical problem running the code in this book, a typo in the text, or any other mistake, please fill in the issue in that repository and I will try to solve it as soon as possible.
Most figures in this book are generated using code, but not the code is not always shown in the book. A common pattern you will find in this book is the following: a block of code immediately followed by a figure (generated from
that code). I hope this pattern will look familiar to those of you using Jupyter Notebook/Lab, and I hope it does not appear annoying or confusing to anyone.


## Conventions used

There are several text conventions used throughout this book.
```CodeInText```: Indicates code words in the text, filenames, or names of functions. Here is an example: "Most of the preceding code is for plotting; the probabilistic part is performed by the ```y = stats.norm(mu, sd).pdf(x)``` line."

A block of code is set as follows:

```Python
μ = 0.
σ = 1.
X = stats.norm(μ, σ)
x = X.rvs(3)
```

**Bold**: Indicates a new term, or an important word.


## Get in touch

Feedback from our readers is always welcome. 

**General feedback**: If you have questions about any aspect of this book, mention the book title in the subject of your message and email us at customercare@packtpub.com.

**Errata**: Although we have taken every care to ensure the accuracy of our content, mistakes do happen. If you have found a mistake in this book, we would be grateful if you would
report this to us. Please open an issue ticket at <https://github.com/aloctavodia/BAP3>


**Becoming an author**: If there is a topic that you have expertise in and you are interested in either writing or contributing to a book, please visit authors.packtpub.com.

For more information about Packt, please visit <https://www.packtpub.com/>.


## Reviews
Please leave a review. Once you have read and used this book, why not leave a review on the site that you purchased it from? Potential readers can then see and use your unbiased opinion to make purchase decisions, we at Packt can understand what you think about our products, and our authors can see your feedback on their book. Thank you!


